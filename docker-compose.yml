version: '3.8'
services:
  config-server:
    image: config-server:latest
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=native
    volumes:
      - ./config-repo:/config

  discovery-service:
    image: discovery-service:latest
    container_name: discovery-service
    ports:
      - "8761:8761"
    depends_on:
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888

  api-gateway:
    image: api-gateway:latest
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - discovery-service
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888

  auth-service:
    image: auth-service:latest
    container_name: auth-service
    ports:
      - "9000:9000"
    depends_on:
      - discovery-service
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888

  customer-service:
    image: customer-service:latest
    container_name: customer-service
    ports:
      - "9100:9100"
    depends_on:
      - discovery-service
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888

  policy-service:
    image: policy-service:latest
    container_name: policy-service
    ports:
      - "9200:9200"
    depends_on:
      - discovery-service
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888

  quote-service:
    image: quote-service:latest
    container_name: quote-service
    ports:
      - "9300:9300"
    depends_on:
      - discovery-service
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888

  claim-service:
    image: claim-service:latest
    container_name: claim-service
    ports:
      - "9400:9400"
    depends_on:
      - discovery-service
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888

  notification-service:
    image: notification-service:latest
    container_name: notification-service
    ports:
      - "9500:9500"
    depends_on:
      - discovery-service
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888

  risk-analysis-service:
    image: risk-analysis-service:latest
    container_name: risk-analysis-service
    ports:
      - "9600:9600"
    depends_on:
      - discovery-service
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888

  payment-service:
    image: payment-service:latest
    container_name: payment-service
    ports:
      - "9700:9700"
    depends_on:
      - discovery-service
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888

  document-service:
    image: document-service:latest
    container_name: document-service
    ports:
      - "9800:9800"
    depends_on:
      - discovery-service
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888

  monitoring-service:
    image: monitoring-service:latest
    container_name: monitoring-service
    ports:
      - "9900:9900"
    depends_on:
      - discovery-service
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888

  # Kafka and Redis stack
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    ports:
      - "9020:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    depends_on:
      - kafka

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped

  kafka-topics-setup:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-topics-setup
    depends_on:
      - kafka
    command: >
      bash -c "
        echo -e 'Esperando a que Kafka esté disponible...'
        cub kafka-ready -b kafka:29092 1 30
        echo -e 'Creando tópicos de Kafka...'
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic customer.created
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic customer.updated
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic customer.status.changed
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic policy.created
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic policy.updated
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic policy.status.changed
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic policy.cancelled
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic policy.renewed
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic policy.premium.due
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic claim.created
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic claim.updated
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic claim.status.changed
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic claim.rejected
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic claim.approved
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic claim.document.required
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic claim.item.added
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic claim.payment.requested
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic payment.created
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic payment.processed
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic payment.failed
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic payment.refund.processed
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic payment.transaction.started
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic payment.transaction.completed
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic payment.transaction.failed
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic payment.reminder
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic customer.security.alert
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic payment-events
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic refund-events
        kafka-topics --create --if-not-exists --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic payment.notifications
        echo -e 'Todos los tópicos creados con éxito'
        kafka-topics --list --bootstrap-server kafka:29092
      "
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

volumes:
  redis-data:
