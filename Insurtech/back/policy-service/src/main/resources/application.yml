spring:
  application:
    name: policy-service
  datasource:
    url: jdbc:oracle:thin:@localhost:1521/xepdb1
    username: POLICY_SCHEMA
    password: ayabrea
    driver-class-name: oracle.jdbc.OracleDriver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.OracleDialect
        format_sql: true
    show-sql: true
    open-in-view: false
  security:
    oauth2:
      resourceserver:
        jwt:
          secret: ${jwt.secret:rEfdWEFerf34r34FERfe3f34fERfefewfWEFWEFwefWEFWEFwef34F34f3}
  # Configuración Kafka (valores mínimos para evitar errores)
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: policy-service-group
      auto-offset-reset: earliest
  config:
    import: "configserver:http://localhost:8888"

# Propiedad para deshabilitar Kafka (usar con @ConditionalOnProperty en KafkaConfig)
kafka:
  enabled: true  # Cambiar a true cuando quieras activar Kafka

server:
  port: 8082
  servlet:
    context-path: /

async:
  core-pool-size: 5
  max-pool-size: 10
  queue-capacity: 25

services:
  customer-service:
    url: http://localhost:8081
  document-service:
    url: http://localhost:8085
  quote-service:
    url: http://localhost:8083
  risk-analysis-service:
    url: http://localhost:8084

jwt:
  secret: rEfdWEFerf34r34FERfe3f34fERfefewfWEFWEFwefWEFWEFwef34F34f3
  issuer: insurtech-auth
  expiration: 86400000

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    preferIpAddress: true

logging:
  level:
    com.insurtech.policy: DEBUG
    org.springframework.security: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE